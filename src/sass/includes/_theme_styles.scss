// Store the theme classes in an array to be applied to <body>
$themeClasses: (teal, tomato, blue, blueviolet);

// Store some essential variables in an array
$themeBaseVars: ($teal_base, $tomato_base, $blue_base, $blueviolet_base);
$themeDarkVars: ($teal_dark, $tomato_dark, $blue_dark, $blueviolet_dark);
$themeOutsetVars: ($teal_outset, $tomato_outset, $blue_outset, $blueviolet_outset);

// Loop through the theme classes and do stuff respectively when each is hit
@for $i from 1 through length($themeClasses) {
  $singleClass: nth($themeClasses, $i);
  $themeBase: null;
  $themeDark: null;
  $themeOutset: null;

  @if $singleClass == teal {
    $themeBase: nth($themeBaseVars, 1);
    $themeDark: nth($themeDarkVars, 1);
    $themeOutset: nth($themeOutsetVars, 1);
  } @elseif $singleClass == tomato {
    $themeBase: nth($themeBaseVars, 2);
    $themeDark: nth($themeDarkVars, 2);
    $themeOutset: nth($themeOutsetVars, 2);
  } @elseif $singleClass == blue {
    $themeBase: nth($themeBaseVars, 3);
    $themeDark: nth($themeDarkVars, 3);
    $themeOutset: nth($themeOutsetVars, 3);
  } @elseif $singleClass == blueviolet {
    $themeBase: nth($themeBaseVars, 4);
    $themeDark: nth($themeDarkVars, 4);
    $themeOutset: nth($themeOutsetVars, 4);
  }

  body {
    &.#{$singleClass} {
      background: $themeBase;
      @include browserSelection($themeBase);
      .github_fork a {
        border-color: $themeBase;
        color: $themeBase;
        &:hover {
          border-color: darken($themeBase, 5%);
          background: lighten($themeBase, 5%);
        }
      }
      h1[data-localstorage] .code {
        color: $themeBase;
      }
      .main_page button {
        border-color: $themeDark;
        background: $themeDark;
        &:hover {
          @include box-shadow(5px 5px 10px 0px $themeDark);
          color: $themeDark;
        }
        &.outset {
          border-color: $themeOutset;
          background: $themeOutset;
          &:hover {
            @include box-shadow(5px 5px 10px 0px $themeOutset);
            border-color: $off_white;
            background: $off_white;
            color: $themeOutset;
          }
        }
      }
      .editor input {
        border-color: $themeBase;
      }
    }
  }
}
